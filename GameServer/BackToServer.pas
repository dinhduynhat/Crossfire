unit BackToServer;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, IdBaseComponent, IdComponent, IdTCPServer, XPMan, WinSock,
  ExtCtrls, IniFiles, Math;

procedure __Back_To_Server(AThread: TIdPeerThread; sm: TStringStream; Len: Integer);

implementation

uses Methods, PublicVariables;

procedure __Back_To_Server(AThread: TIdPeerThread; sm: TStringStream; Len: Integer);
var tTmp, i: Integer;
  ipStr, s, source, s1, s2: String;
begin
  ipStr:= AThread.Connection.Socket.Binding.PeerIP;
  
  tTmp:= getIPHex(ipStr);

  //send('server\return_server\return.txt', AThread, 2, 'Voltou a lista de Servers');
  s:= StringReplace(StrToHexCnt(sm, Len), ' ', '', [rfReplaceAll]);
  gConsole(ipStr, 'Voltou a lista de Servers');
  s:= FormatDateTime('yyyymmddhhnnss', Now());

  source:= 'abcdef0123456789';
  Randomize;   s1:= '';
  For i:= 1 to 32 do
    s1:= s1 + source[Random(15) + 1];

  sm:= TStringStream.Create(HexToStr('F1D0000106000000000000000000D399A956323800002C8EA956') + s +
  HexToStr('0000000000000000000000000000000000000000000000000000000' +
  '00000000000000000000000000000000000000000000000000000010000000000000000000000') + s1 +
  HexToStr('00000000F40100001027000000000000000000000100000000000000000000000000' +
  '000000000000010000000000000000000000000040F5E71BD2410000000000000000000000000' +
  '0000000F2'));
  AThread.Connection.WriteStream(sm);
  if usrStatusArr[tTmp] = 'LOGIN' then begin
    s2:= nickNameArr[tTmp];
    sm:= TStringStream.Create(HexToStr('F16802000200A8633C01' + s2 +
    '00000000000000000000000000000000000000000000000000000000000000000000AAA9BC445F000000000000000000000000000700' +
    '39333761613335306165303461623837363365613233663163633266623939630031373630313930300000000000000000000000000000000000000000000000000000' +
    '000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000' +
    '000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000' +
    '000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000' +
    '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000650EFE55313900' +
    '00470EFE5532303135303931393231333931390000010000000000313633323636000000000031363332363600000000003136333236360000000000000000000000' +
    '00000000000000050000000B010000D70000003764313333363739343234333831613838366632663664303336653136353638000000009414000066910000E20900' +
    '00E45B0000070000008C00000073000000370000000400000003000000000000000000000000008010DB50CA' +
    '4100000000000000000000000000010000244800008CA79B9A0CFF88C4E0A8A8A83ECDBAF6D29A0E6CF2'));
    AThread.Connection.WriteStream(sm);
  end;
end;

end. 
